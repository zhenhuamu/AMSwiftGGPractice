
1、基础部分

Swift 是一门开发 iOS, macOS, watchOS 和 tvOS 应用的新语言。然而，如果你有 C 或者 Objective-C 开发经验的话，你会发现 Swift 的很多内容都是你熟悉的。
Swift 包含了 C 和 Objective-C 上所有基础数据类型，Int 表示整型值； Double 和 Float 表示浮点型值； Bool 是布尔型值；String 是文本型数据。 Swift 还提供了三个基本的集合类型，Array、Set 和 Dictionary ，详见 集合类型。
就像 C 语言一样，Swift 使用变量来进行存储并通过变量名来关联值。在 Swift 中，广泛的使用着值不可变的变量，它们就是常量，而且比 C 语言的常量更强大。在 Swift 中，如果你要处理的值不需要改变，那使用常量可以让你的代码更加安全并且更清晰地表达你的意图。
除了我们熟悉的类型，Swift 还增加了 Objective-C 中没有的高阶数据类型比如元组（Tuple）。元组可以让你创建或者传递一组数据，比如作为函数的返回值时，你可以用一个元组可以返回多个值。
Swift 还增加了可选（Optional）类型，用于处理值缺失的情况。可选表示 “那儿有一个值，并且它等于 x ” 或者 “那儿没有值” 。可选有点像在 Objective-C 中使用 nil ，但是它可以用在任何类型上，不仅仅是类。可选类型比 Objective-C 中的 nil 指针更加安全也更具表现力，它是 Swift 许多强大特性的重要组成部分。
Swift 是一门类型安全的语言，这意味着 Swift 可以让你清楚地知道值的类型。如果你的代码需要一个 String ，类型安全会阻止你不小心传入一个 Int 。同样的，如果你的代码需要一个 String，类型安全会阻止你意外传入一个可选的 String 。类型安全可以帮助你在开发阶段尽早发现并修正错误。

================================
AMBasicsPart1
================================

1.1 常量和变量

1.1.1 声明常量和变量

1.1.2 类型注解

1.1.3 常量和变量的命名

1.1.4 输出常量和变量

1.2 注释

1.3 分号

1.4 整数

1.4.1 整数范围

1.4.2 Int

1.4.3 UInt

1.5 浮点数

================================
AMBasicsPart2
================================

1.6 类型安全和类型推断

1.7 数值型字面量

1.8 数值型类型转换

1.8.1 整数转换

1.8.2 整数和浮点数转换

1.9 类型别名

1.10 布尔值

================================
AMBasicsPart3
================================

1.11 元组

1.12 可选类型

1.12.1 nil

1.12.2 if 语句以及强制解析

1.12.3 可选绑定

1.12.4 隐式解析可选类型

================================
AMBasicsPart4
================================

1.13 错误处理

1.14 断言和先决条件

1.14.1 使用断言进行调试

1.14.2 强制执行先决条件
