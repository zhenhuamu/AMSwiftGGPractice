
13、继承

    一个类可以继承另一个类的方法，属性和其它特性。
    当一个类继承其它类时，继承类叫子类，被继承类叫超类（或父类）。
    在Swift中，继承是区分「类」与其它类型的一个基本特征。
    在Swift中，类可以调用和访问超类的方法、属性和下标，并且可以重写这些方法，属性和下标来优化或修改它们的行为。
    Swift 会检查你的重写定义在超类中是否有匹配的定义，以此确保你的重写行为是正确的。
    可以为类中继承来的属性添加属性观察器，这样一来，当属性值改变时，类就会被通知到。
    可以为任何属性添加属性观察器，无论它原本被定义为存储型属性还是计算型属性。

    // 重写
    子类可以为继承来的实例方法，类方法，实例属性，类属性，或下标提供自己定制的实现。
    我们把这种行为叫重写。
    如果要重写某个特性，你需要在重写定义的前面加上 override 关键字。
    这么做，就表明了你是想提供一个重写版本，而非错误地提供了一个相同的定义。
    意外的重写行为可能会导致不可预知的错误，任何缺少 override 关键字的重写都会在编译时被认定为错误。
    override 关键字会提醒 Swift 编译器去检查该类的超类（或其中一个超类）是否有匹配重写版本的声明。
    这个检查可以确保你的重写定义是正确的。
     
================================
AMInheritPart1
================================

1.1 子类生成

1.2 重写

1.3 防止重写
